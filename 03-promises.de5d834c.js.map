{"version":3,"sources":["js/03-promises.js"],"names":["formEl","document","querySelector","addEventListener","onFormSubmit","receiveFormData","promiseValue","createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","event","target","name","value","preventDefault","Number","delayStep","step","amount","i","then","console","log","catch"],"mappings":";AAAA,MAAMA,EAASC,SAASC,cAAc,SACtCF,EAAOG,iBAAiB,SAAUC,GAClCJ,EAAOG,iBAAiB,QAASE,GAEjC,IAAIC,EAAe,GAEnB,SAASC,EAAcC,EAAUC,GACzBC,MAAAA,EAAgBC,KAAKC,SAAW,GAC/B,OAAA,IAAIC,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACLN,EACFI,EAAQ,CAAEN,SAAAA,EAAUC,MAAAA,IAEpBM,EAAO,CAAEP,SAAAA,EAAUC,MAAAA,KAEpBA,KAIP,SAASJ,EAAgBY,GACvBX,EAAaW,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,MAGjD,SAAShB,EAAaa,GACpBA,EAAMI,iBAEFZ,IAAAA,EAAQa,OAAOhB,EAAaG,OAC5Bc,EAAYD,OAAOhB,EAAakB,MAChCC,EAASH,OAAOhB,EAAamB,QAE5B,IAAA,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,IAC3BnB,EAAcmB,EAAGjB,GACdkB,KAAK,EAAGnB,SAAAA,EAAUC,MAAAA,MACjBmB,QAAQC,2BAA2BrB,QAAeC,SAEnDqB,MAAM,EAAGtB,SAAAA,EAAUC,MAAAA,MAClBmB,QAAQC,0BAA0BrB,QAAeC,SAErDA,GAASc","file":"03-promises.de5d834c.js","sourceRoot":"../src","sourcesContent":["const formEl = document.querySelector('.form');\nformEl.addEventListener('submit', onFormSubmit);\nformEl.addEventListener('input', receiveFormData);\n\nlet promiseValue = {};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction receiveFormData(event) {\n  promiseValue[event.target.name] = event.target.value;\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(promiseValue.delay);\n  let delayStep = Number(promiseValue.step);\n  let amount = Number(promiseValue.amount);\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += delayStep;\n  }\n}\n"]}